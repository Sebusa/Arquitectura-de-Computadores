// ALU
module ALU(
  output logic [31:0]ALURes,
  input logic  [31:0]A,B,
  input logic [3:0]ALUOp,
  input logic en
           );
  
  always@(en,ALUOp,A,B,ALURes)
    
 begin
    
   if(en == 0)
    ALURes = 32'bzzzz;
else
    case(opcode)
      4'b0000: ALURes = A+B;
      4'b1000: ALURes = A-B;
      4'b0001: ALURes = A << B;
      4'b0010: ALURes = $signed(A) < $signed(B);
      4'b0011: ALURes = A < B;
      4'b0100: ALURes = A ^ B;
      4'b0101: ALURes = A >> B;
      4'b1101: ALURes = A >>> B;
      4'b0110: ALURes = A || B;
      4'b0111: ALURes = A && B;
    endcase
end
endmodule